name: Validate Terraform Code

on:
  pull_request:
    branches:
      - main
      - master

permissions:
  id-token: write
  contents: read

jobs:
  terraform-fmt:
    runs-on: ubuntu-latest
    name: Terraform Format Check
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4

      - name: Validate Terraform Formatting (fmt)
        run: |
          set -e  # 🚀 Ensures failure stops workflow
          terraform fmt -check
        working-directory: ./infrastructure  # ✅ Set correct directory if needed

  terraform-validate:
    runs-on: ubuntu-latest
    name: Terraform Validation
    needs: terraform-fmt
    if: needs.terraform-fmt.result == 'success'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4

      - name: Debug - List Repository Files
        run: ls -R  # 🔍 Check where Terraform files are located

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./infrastructure  # ✅ Use the correct directory

      - name: Validate Terraform Configuration
        run: |
          set -e  # 🚀 Ensures Terraform validation stops workflow
          terraform validate
        working-directory: ./infrastructure  # ✅ Use the correct directory

      - name: Terraform Plan  # 🔥 Ensures workflow fails if errors exist
        run: |
          set -e  # 🚀 Fails the workflow if plan detects issues
          terraform plan -out=tfplan
        working-directory: ./infrastructure  # ✅ Use the correct directory
